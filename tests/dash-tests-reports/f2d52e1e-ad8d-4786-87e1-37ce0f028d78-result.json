{"name": "test_sidebar_header", "status": "broken", "statusDetails": {"message": "NameError: name 'TimeoutException' is not defined", "trace": "browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"15c864414cb813d08138c9c1e8a8c13e\")>\n\n    def test_sidebar_header(browser: WebDriver):\n        #login(browser, \"remy123@gmail.com\", \"remy123\")  #REPLACE\n        #submit_button = browser.find_elements(By.CSS_SELECTOR, \".btn.btn-primary.btn-block\")\n        #checks if the list of elements matching the login button selector is empty (length = 0)\n        browser.get(LOGIN_PAGE_URL)\n        try:\n>           sidebar_header = WebDriverWait(browser,10).until(\n                EC.presence_of_element_located((By.ID, \"sidebar-header\")) #REPLACE\n            )\n\nOnlyDash_test.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"15c864414cb813d08138c9c1e8a8c13e\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x10416a020>, message = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       0   chromedriver                        0x0000000104ddc510 chromedriver + 4310288\nE       1   chromedriver                        0x0000000104dd44bc chromedriver + 4277436\nE       2   chromedriver                        0x0000000104a07b6c chromedriver + 293740\nE       3   chromedriver                        0x0000000104a4d040 chromedriver + 577600\nE       4   chromedriver                        0x0000000104a87e60 chromedriver + 818784\nE       5   chromedriver                        0x0000000104a40fd0 chromedriver + 528336\nE       6   chromedriver                        0x0000000104a41e7c chromedriver + 532092\nE       7   chromedriver                        0x0000000104da2834 chromedriver + 4073524\nE       8   chromedriver                        0x0000000104da67fc chromedriver + 4089852\nE       9   chromedriver                        0x0000000104da6c58 chromedriver + 4090968\nE       10  chromedriver                        0x0000000104dac8f8 chromedriver + 4114680\nE       11  chromedriver                        0x0000000104da7234 chromedriver + 4092468\nE       12  chromedriver                        0x0000000104d81604 chromedriver + 3937796\nE       13  chromedriver                        0x0000000104dc3ee8 chromedriver + 4210408\nE       14  chromedriver                        0x0000000104dc4064 chromedriver + 4210788\nE       15  chromedriver                        0x0000000104dd4134 chromedriver + 4276532\nE       16  libsystem_pthread.dylib             0x000000018556bfa8 _pthread_start + 148\nE       17  libsystem_pthread.dylib             0x0000000185566da0 thread_start + 8\n\n/opt/homebrew/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nbrowser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"15c864414cb813d08138c9c1e8a8c13e\")>\n\n    def test_sidebar_header(browser: WebDriver):\n        #login(browser, \"remy123@gmail.com\", \"remy123\")  #REPLACE\n        #submit_button = browser.find_elements(By.CSS_SELECTOR, \".btn.btn-primary.btn-block\")\n        #checks if the list of elements matching the login button selector is empty (length = 0)\n        browser.get(LOGIN_PAGE_URL)\n        try:\n            sidebar_header = WebDriverWait(browser,10).until(\n                EC.presence_of_element_located((By.ID, \"sidebar-header\")) #REPLACE\n            )\n            assert sidebar_header.is_displayed(), \"Sidebar header is missing\"\n            assert \"My Dashboard\" in sidebar_header.text, \"The text'My dashboard' is not present\"\n>       except TimeoutException:\nE       NameError: name 'TimeoutException' is not defined\n\nOnlyDash_test.py:30: NameError"}, "start": 1698887323862, "stop": 1698887334168, "uuid": "d7623942-d5b2-4a55-8e00-fb9fb06ffbfa", "historyId": "7e0da83e2a640d5d2bcede2cb387a1a2", "testCaseId": "7e0da83e2a640d5d2bcede2cb387a1a2", "fullName": "OnlyDash_test#test_sidebar_header", "labels": [{"name": "suite", "value": "OnlyDash_test"}, {"name": "host", "value": "Dhairyas-MacBook-Air-3.local"}, {"name": "thread", "value": "19443-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "OnlyDash_test"}]}