{"name": "test_sidebar_logo", "status": "broken", "statusDetails": {"message": "NameError: name 'TimeoutException' is not defined", "trace": "browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"5c769eccd90687ebc4fb0468b636d1c2\")>\n\n    def test_sidebar_logo(browser: WebDriver):\n        browser.get(LOGIN_PAGE_URL)\n        try:\n>           logo = WebDriverWait(browser,10).until(\n            EC.presence_of_element_located((By.TAG_NAME, \"logo.png\")) #REPLACE\n            )\n\nOnlyDash_test.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"5c769eccd90687ebc4fb0468b636d1c2\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x10434e0c0>, message = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       0   chromedriver                        0x0000000104f88510 chromedriver + 4310288\nE       1   chromedriver                        0x0000000104f804bc chromedriver + 4277436\nE       2   chromedriver                        0x0000000104bb3b6c chromedriver + 293740\nE       3   chromedriver                        0x0000000104bf9040 chromedriver + 577600\nE       4   chromedriver                        0x0000000104c33e60 chromedriver + 818784\nE       5   chromedriver                        0x0000000104becfd0 chromedriver + 528336\nE       6   chromedriver                        0x0000000104bede7c chromedriver + 532092\nE       7   chromedriver                        0x0000000104f4e834 chromedriver + 4073524\nE       8   chromedriver                        0x0000000104f527fc chromedriver + 4089852\nE       9   chromedriver                        0x0000000104f52c58 chromedriver + 4090968\nE       10  chromedriver                        0x0000000104f588f8 chromedriver + 4114680\nE       11  chromedriver                        0x0000000104f53234 chromedriver + 4092468\nE       12  chromedriver                        0x0000000104f2d604 chromedriver + 3937796\nE       13  chromedriver                        0x0000000104f6fee8 chromedriver + 4210408\nE       14  chromedriver                        0x0000000104f70064 chromedriver + 4210788\nE       15  chromedriver                        0x0000000104f80134 chromedriver + 4276532\nE       16  libsystem_pthread.dylib             0x000000018556bfa8 _pthread_start + 148\nE       17  libsystem_pthread.dylib             0x0000000185566da0 thread_start + 8\n\n/opt/homebrew/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nbrowser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"5c769eccd90687ebc4fb0468b636d1c2\")>\n\n    def test_sidebar_logo(browser: WebDriver):\n        browser.get(LOGIN_PAGE_URL)\n        try:\n            logo = WebDriverWait(browser,10).until(\n            EC.presence_of_element_located((By.TAG_NAME, \"logo.png\")) #REPLACE\n            )\n            assert logo.is_displayed(), \"logo is missing\"\n>       except TimeoutException:\nE       NameError: name 'TimeoutException' is not defined\n\nOnlyDash_test.py:40: NameError"}, "start": 1698887335475, "stop": 1698887345711, "uuid": "a61efb21-b1ff-479f-a856-7c32f293dcff", "historyId": "f559dce415691765ed939885f215404b", "testCaseId": "f559dce415691765ed939885f215404b", "fullName": "OnlyDash_test#test_sidebar_logo", "labels": [{"name": "suite", "value": "OnlyDash_test"}, {"name": "host", "value": "Dhairyas-MacBook-Air-3.local"}, {"name": "thread", "value": "19443-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "OnlyDash_test"}]}