{"name": "test_my_content", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: chrome=119.0.6045.199)\nStacktrace:\n0   chromedriver                        0x0000000104636004 chromedriver + 4169732\n1   chromedriver                        0x000000010462dff8 chromedriver + 4136952\n2   chromedriver                        0x0000000104283500 chromedriver + 292096\n3   chromedriver                        0x000000010427bf20 chromedriver + 261920\n4   chromedriver                        0x000000010426c790 chromedriver + 198544\n5   chromedriver                        0x000000010426dbd0 chromedriver + 203728\n6   chromedriver                        0x000000010426caec chromedriver + 199404\n7   chromedriver                        0x000000010426b9d0 chromedriver + 195024\n8   chromedriver                        0x000000010426b97c chromedriver + 194940\n9   chromedriver                        0x0000000104269ef4 chromedriver + 188148\n10  chromedriver                        0x000000010426a9e0 chromedriver + 190944\n11  chromedriver                        0x0000000104285ebc chromedriver + 302780\n12  chromedriver                        0x0000000104303da4 chromedriver + 818596\n13  chromedriver                        0x0000000104303818 chromedriver + 817176\n14  chromedriver                        0x00000001042bc5e8 chromedriver + 525800\n15  chromedriver                        0x00000001042bd4b8 chromedriver + 529592\n16  chromedriver                        0x00000001045fc334 chromedriver + 3932980\n17  chromedriver                        0x0000000104600970 chromedriver + 3950960\n18  chromedriver                        0x00000001045e4774 chromedriver + 3835764\n19  chromedriver                        0x0000000104601478 chromedriver + 3953784\n20  chromedriver                        0x00000001045d6ab4 chromedriver + 3779252\n21  chromedriver                        0x000000010461d914 chromedriver + 4069652\n22  chromedriver                        0x000000010461da90 chromedriver + 4070032\n23  chromedriver                        0x000000010462dc70 chromedriver + 4136048\n24  libsystem_pthread.dylib             0x000000018556bfa8 _pthread_start + 148\n25  libsystem_pthread.dylib             0x0000000185566da0 thread_start + 8", "trace": "browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"b49c2ad44d1aaad02ccd47f586c9e00d\")>\n\n    def test_my_content(browser: WebDriver):\n>       browser.get(LOGIN_PAGE_URL)\n\ncontent_test.py:66: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n/opt/homebrew/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:353: in get\n    self.execute(Command.GET, {\"url\": url})\n/opt/homebrew/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x106fbe990>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_CONNECTION_REFUSED\\\\n  ...00018556bfa8 _pthread_start + 148\\\\n25  libsystem_pthread.dylib             0x0000000185566da0 thread_start + 8\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\nE         (Session info: chrome=119.0.6045.199)\nE       Stacktrace:\nE       0   chromedriver                        0x0000000104636004 chromedriver + 4169732\nE       1   chromedriver                        0x000000010462dff8 chromedriver + 4136952\nE       2   chromedriver                        0x0000000104283500 chromedriver + 292096\nE       3   chromedriver                        0x000000010427bf20 chromedriver + 261920\nE       4   chromedriver                        0x000000010426c790 chromedriver + 198544\nE       5   chromedriver                        0x000000010426dbd0 chromedriver + 203728\nE       6   chromedriver                        0x000000010426caec chromedriver + 199404\nE       7   chromedriver                        0x000000010426b9d0 chromedriver + 195024\nE       8   chromedriver                        0x000000010426b97c chromedriver + 194940\nE       9   chromedriver                        0x0000000104269ef4 chromedriver + 188148\nE       10  chromedriver                        0x000000010426a9e0 chromedriver + 190944\nE       11  chromedriver                        0x0000000104285ebc chromedriver + 302780\nE       12  chromedriver                        0x0000000104303da4 chromedriver + 818596\nE       13  chromedriver                        0x0000000104303818 chromedriver + 817176\nE       14  chromedriver                        0x00000001042bc5e8 chromedriver + 525800\nE       15  chromedriver                        0x00000001042bd4b8 chromedriver + 529592\nE       16  chromedriver                        0x00000001045fc334 chromedriver + 3932980\nE       17  chromedriver                        0x0000000104600970 chromedriver + 3950960\nE       18  chromedriver                        0x00000001045e4774 chromedriver + 3835764\nE       19  chromedriver                        0x0000000104601478 chromedriver + 3953784\nE       20  chromedriver                        0x00000001045d6ab4 chromedriver + 3779252\nE       21  chromedriver                        0x000000010461d914 chromedriver + 4069652\nE       22  chromedriver                        0x000000010461da90 chromedriver + 4070032\nE       23  chromedriver                        0x000000010462dc70 chromedriver + 4136048\nE       24  libsystem_pthread.dylib             0x000000018556bfa8 _pthread_start + 148\nE       25  libsystem_pthread.dylib             0x0000000185566da0 thread_start + 8\n\n/opt/homebrew/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: WebDriverException"}, "start": 1701566001871, "stop": 1701566002642, "uuid": "3e13fa70-3f94-448c-9aaa-bacd347c9ffb", "historyId": "891a5eff2cfdb9783cf8ff23bdb1fa1a", "testCaseId": "891a5eff2cfdb9783cf8ff23bdb1fa1a", "fullName": "content_test#test_my_content", "labels": [{"name": "suite", "value": "content_test"}, {"name": "host", "value": "Dhairyas-MacBook-Air-3.local"}, {"name": "thread", "value": "87611-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "content_test"}]}